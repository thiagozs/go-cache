// Code generated by MockGen. DO NOT EDIT.
// Source: gocache/repository.go

// Package gocache is a generated GoMock package.
package gocache

import (
	reflect "reflect"

	kind "github.com/thiagozs/go-cache/kind"
	gomock "go.uber.org/mock/gomock"
)

// MockGocacheLayerRepo is a mock of GocacheLayerRepo interface.
type MockGocacheLayerRepo struct {
	ctrl     *gomock.Controller
	recorder *MockGocacheLayerRepoMockRecorder
}

// MockGocacheLayerRepoMockRecorder is the mock recorder for MockGocacheLayerRepo.
type MockGocacheLayerRepoMockRecorder struct {
	mock *MockGocacheLayerRepo
}

// NewMockGocacheLayerRepo creates a new mock instance.
func NewMockGocacheLayerRepo(ctrl *gomock.Controller) *MockGocacheLayerRepo {
	mock := &MockGocacheLayerRepo{ctrl: ctrl}
	mock.recorder = &MockGocacheLayerRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGocacheLayerRepo) EXPECT() *MockGocacheLayerRepoMockRecorder {
	return m.recorder
}

// DeleteKey mocks base method.
func (m *MockGocacheLayerRepo) DeleteKey(key string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteKey", key)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteKey indicates an expected call of DeleteKey.
func (mr *MockGocacheLayerRepoMockRecorder) DeleteKey(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteKey", reflect.TypeOf((*MockGocacheLayerRepo)(nil).DeleteKey), key)
}

// GetDriver mocks base method.
func (m *MockGocacheLayerRepo) GetDriver() kind.Driver {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDriver")
	ret0, _ := ret[0].(kind.Driver)
	return ret0
}

// GetDriver indicates an expected call of GetDriver.
func (mr *MockGocacheLayerRepoMockRecorder) GetDriver() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDriver", reflect.TypeOf((*MockGocacheLayerRepo)(nil).GetDriver))
}

// GetVal mocks base method.
func (m *MockGocacheLayerRepo) GetVal(key string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVal", key)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVal indicates an expected call of GetVal.
func (mr *MockGocacheLayerRepoMockRecorder) GetVal(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVal", reflect.TypeOf((*MockGocacheLayerRepo)(nil).GetVal), key)
}

// WriteKeyVal mocks base method.
func (m *MockGocacheLayerRepo) WriteKeyVal(key, val string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteKeyVal", key, val)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteKeyVal indicates an expected call of WriteKeyVal.
func (mr *MockGocacheLayerRepoMockRecorder) WriteKeyVal(key, val interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteKeyVal", reflect.TypeOf((*MockGocacheLayerRepo)(nil).WriteKeyVal), key, val)
}

// WriteKeyValAsJSON mocks base method.
func (m *MockGocacheLayerRepo) WriteKeyValAsJSON(key string, val any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteKeyValAsJSON", key, val)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteKeyValAsJSON indicates an expected call of WriteKeyValAsJSON.
func (mr *MockGocacheLayerRepoMockRecorder) WriteKeyValAsJSON(key, val interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteKeyValAsJSON", reflect.TypeOf((*MockGocacheLayerRepo)(nil).WriteKeyValAsJSON), key, val)
}

// WriteKeyValAsJSONTTL mocks base method.
func (m *MockGocacheLayerRepo) WriteKeyValAsJSONTTL(key string, val any, insec int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteKeyValAsJSONTTL", key, val, insec)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteKeyValAsJSONTTL indicates an expected call of WriteKeyValAsJSONTTL.
func (mr *MockGocacheLayerRepoMockRecorder) WriteKeyValAsJSONTTL(key, val, insec interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteKeyValAsJSONTTL", reflect.TypeOf((*MockGocacheLayerRepo)(nil).WriteKeyValAsJSONTTL), key, val, insec)
}

// WriteKeyValTTL mocks base method.
func (m *MockGocacheLayerRepo) WriteKeyValTTL(key, val string, insec int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteKeyValTTL", key, val, insec)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteKeyValTTL indicates an expected call of WriteKeyValTTL.
func (mr *MockGocacheLayerRepoMockRecorder) WriteKeyValTTL(key, val, insec interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteKeyValTTL", reflect.TypeOf((*MockGocacheLayerRepo)(nil).WriteKeyValTTL), key, val, insec)
}
